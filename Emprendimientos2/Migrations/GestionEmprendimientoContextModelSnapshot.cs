// <auto-generated />
using System;
using Emprendimientos2.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Emprendimientos2.Migrations
{
    [DbContext(typeof(GestionEmprendimientoContext))]
    partial class GestionEmprendimientoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Emprendimientos2.Models.Emprendimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PK__EMPRENDI__3213E83F19B14256");

                    b.ToTable("EMPRENDIMIENTO", (string)null);
                });

            modelBuilder.Entity("Emprendimientos2.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadInventario")
                        .HasColumnType("int")
                        .HasColumnName("cantidad_inventario");

                    b.Property<decimal?>("CostoFabricacion")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("costo_fabricacion");

                    b.Property<int>("EmprendimientoId")
                        .HasColumnType("int")
                        .HasColumnName("emprendimiento_id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio_unitario");

                    b.Property<string>("RutaFoto")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ruta_foto");

                    b.HasKey("Id")
                        .HasName("PK__PRODUCTO__3213E83F3DE5A967");

                    b.HasIndex(new[] { "EmprendimientoId" }, "IX_Producto_EmprendimientoId");

                    b.ToTable("PRODUCTO", (string)null);
                });

            modelBuilder.Entity("Emprendimientos2.Models.TransaccionFinanciera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("descripcion");

                    b.Property<int>("EmprendimientoId")
                        .HasColumnType("int")
                        .HasColumnName("emprendimiento_id");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("monto");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("tipo");

                    b.HasKey("Id")
                        .HasName("PK__TRANSACC__3213E83F0A4F99E6");

                    b.HasIndex(new[] { "EmprendimientoId" }, "IX_TransaccionFinanciera_EmprendimientoId");

                    b.ToTable("TRANSACCION_FINANCIERA", (string)null);
                });

            modelBuilder.Entity("Emprendimientos2.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("contrasena");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<int?>("EmprendimientoId")
                        .HasColumnType("int")
                        .HasColumnName("emprendimiento_id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PK__USUARIO__3213E83F7F71B665");

                    b.HasIndex(new[] { "EmprendimientoId" }, "IX_Usuario_EmprendimientoId");

                    b.HasIndex(new[] { "Email" }, "UQ__USUARIO__AB6E61649EB75FF7")
                        .IsUnique();

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("Emprendimientos2.Models.Producto", b =>
                {
                    b.HasOne("Emprendimientos2.Models.Emprendimiento", "Emprendimiento")
                        .WithMany("Productos")
                        .HasForeignKey("EmprendimientoId")
                        .IsRequired()
                        .HasConstraintName("FK__PRODUCTO__empren__66603565");

                    b.Navigation("Emprendimiento");
                });

            modelBuilder.Entity("Emprendimientos2.Models.TransaccionFinanciera", b =>
                {
                    b.HasOne("Emprendimientos2.Models.Emprendimiento", "Emprendimiento")
                        .WithMany("TransaccionFinancieras")
                        .HasForeignKey("EmprendimientoId")
                        .IsRequired()
                        .HasConstraintName("FK__TRANSACCI__empre__6383C8BA");

                    b.Navigation("Emprendimiento");
                });

            modelBuilder.Entity("Emprendimientos2.Models.Usuario", b =>
                {
                    b.HasOne("Emprendimientos2.Models.Emprendimiento", "Emprendimiento")
                        .WithMany("Usuarios")
                        .HasForeignKey("EmprendimientoId")
                        .HasConstraintName("FK__USUARIO__emprend__5FB337D6");

                    b.Navigation("Emprendimiento");
                });

            modelBuilder.Entity("Emprendimientos2.Models.Emprendimiento", b =>
                {
                    b.Navigation("Productos");

                    b.Navigation("TransaccionFinancieras");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
